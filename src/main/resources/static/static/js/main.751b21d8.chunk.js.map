{"version":3,"sources":["redux/types/types.js","service/api.js","pages/Login.js","redux/action/loginAction.js","redux/action/categoryAction.js","redux/action/appAction.js","components/AdminNavbar.js","components/AdminDashboard.js","components/AdminCategory.js","pages/Admin.js","components/PrivateRoute.js","App.js","redux/reducer/loginReducer.js","redux/reducer/categoryReducer.js","redux/reducer/appReducer.js","redux/reducer/rootreducer.js","index.js"],"names":["LOGIN","UPDATESTATE","API_PATH","TOKEN_NAME","tokenHeader","headers","Authorization","localStorage","getItem","connect","state","console","log","zagruzka","login","isLoading","loginUser","data","history","dispatch","type","axios","post","then","res","setItem","catch","error","toast","ketmon","useNavigate","className","onValidSubmit","event","values","name","placeholder","required","disabled","updateState","payload","getCategories","get","categories","getMe","currentUser","app","props","fullName","role","to","AdminDashboard","modalOpen","category","deleteModalOpen","currentCategory","addCategory","success","message","deleteCategory","id","delete","editCategory","put","search","useEffect","changeDeleteModal","onChange","e","target","value","searchCategory","onClick","map","item","isOpen","selectedCategory","toggle","Admin","location","useLocation","pathname","PrivateRoute","App","exact","path","element","initialState","menu","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","redux_thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.751b21d8.chunk.js","sourcesContent":["export const LOGIN = \"LOGIN\";\r\nexport const UPDATESTATE = \"UPDATESTATE\";","export const API_PATH = \"http://localhost/api/\";\r\nexport const TOKEN_NAME = \"role-permission\"; //proyekt uchun alohida yozish mn\r\nexport const tokenKey = localStorage.getItem(TOKEN_NAME); //keyda EJG tokenni\r\nexport const tokenHeader = {\r\n    headers: {Authorization: tokenKey}\r\n};","import React from 'react';\r\nimport {AvForm, AvField} from 'availity-reactstrap-validation';\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser} from \"../redux/action/loginAction\";\r\nimport {TOKEN_NAME} from \"../service/api\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Login = (ketmon) => {\r\n    const history = useNavigate();\r\n    console.log(localStorage.getItem(TOKEN_NAME))\r\n    const login = (event, values) => {\r\n        ketmon.loginUser(values, history);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login Page</h1>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <AvForm onValidSubmit={login}>\r\n                                    <AvField\r\n                                        name=\"userName\"\r\n                                        placeholder=\"Phone number\"\r\n                                        type=\"text\"\r\n                                        required/>\r\n                                    <AvField\r\n                                        name=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        required/>\r\n                                    <button type='submit' disabled={ketmon.zagruzka}\r\n                                            className='btn btn-success btn-block'> {ketmon.zagruzka ?\r\n                                        <span className='spinner-border spinner-border-sm'/> : \"\"} Login\r\n                                    </button>\r\n                                </AvForm>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        zagruzka: state.login.isLoading\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {loginUser})(Login);","import axios from \"axios\";\r\nimport {LOGIN} from \"../types/types\";\r\nimport {API_PATH, TOKEN_NAME} from \"../../service/api\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport function loginUser(data, history) {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: LOGIN\r\n        })\r\n        axios.post(API_PATH + \"auth/login\", data)\r\n            .then((res) => {\r\n                console.log(res)\r\n                localStorage.setItem(TOKEN_NAME, \"Bearer \" + res.data);\r\n                dispatch({type: LOGIN});\r\n                history(\"/admin/category\")\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                toast.error(\"Xatolik!\");\r\n                dispatch({type: LOGIN});\r\n            })\r\n    }\r\n}","import axios from \"axios\";\r\nimport {LOGIN, UPDATESTATE} from \"../types/types\";\r\nimport {API_PATH, TOKEN_NAME, tokenHeader} from \"../../service/api\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport const updateState = (data) => {\r\n    return {\r\n        type: UPDATESTATE,\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport function search(name) {\r\n    return function (dispatch) {\r\n        axios.get(API_PATH + \"category/search?name=\" + name, tokenHeader)\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    toast.success(\"Mana!\");\r\n                    console.log(res)\r\n                    dispatch(updateState({categories: res.data}))\r\n                } else {\r\n                    toast.error(res.data.message);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function editCategory(id, data) {\r\n    return function (dispatch) {\r\n        axios.put(API_PATH + \"category/\" + id, data, tokenHeader)\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    toast.success(\"EDITED!\");\r\n                    dispatch(getCategories());\r\n                    dispatch({\r\n                        type: UPDATESTATE,\r\n                        payload: {\r\n                            modalOpen: false\r\n                        }\r\n                    })\r\n                } else {\r\n                    toast.error(res.data.message);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function deleteCategory(id) {\r\n    return function (dispatch) {\r\n        axios.delete(API_PATH + \"category/\" + id, tokenHeader)\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    toast.success(\"DELETED!\");\r\n                    dispatch(getCategories());\r\n                    dispatch({\r\n                        type: UPDATESTATE,\r\n                        payload: {\r\n                            deleteModalOpen: false\r\n                        }\r\n                    })\r\n                } else {\r\n                    toast.error(res.data.message);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function addCategory(data) {\r\n    return function (dispatch) {\r\n        console.log(data)\r\n        let token = localStorage.getItem(TOKEN_NAME);\r\n        axios.post(API_PATH + \"category\", data, tokenHeader)\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    toast.success(\"GET\");\r\n                    dispatch(getCategories());\r\n                    dispatch({\r\n                        type: UPDATESTATE,\r\n                        payload: {\r\n                            modalOpen: false\r\n                        }\r\n                    })\r\n                } else {\r\n                    toast.error(res.data.message);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getCategories() {\r\n    return function (dispatch) {\r\n        axios.get(API_PATH + \"category\", tokenHeader\r\n        )\r\n            .then((res) => {\r\n                console.log(res)\r\n                dispatch(updateState({categories: res.data}))\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                toast.error(\"Xatolik!\");\r\n            })\r\n    }\r\n}","import {API_PATH, TOKEN_NAME, tokenHeader} from \"../../service/api\";\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport {UPDATESTATE} from \"../types/types\";\r\nimport {getCategories} from \"./categoryAction\";\r\n\r\nexport function getMe() {\r\n    return function (dispatch) {\r\n        axios.get(API_PATH + \"auth/me\", tokenHeader)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: UPDATESTATE,\r\n                    payload: {\r\n                        currentUser: res.data\r\n                    }\r\n                })\r\n                console.log(res)\r\n            })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Modal, ModalBody, ModalFooter} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {getMe} from \"../redux/action/appAction\";\r\n\r\nconst AdminNavbar = (props) => {\r\n    return (\r\n        <div className='admin-layout'>\r\n            <div className=\"admin-navbar\"></div>\r\n\r\n            <div className=\"admin-content\">\r\n                <div className=\"admin-content-left bg-info\">\r\n\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className='user-image'>\r\n                            <span className='icon icon-user'></span>\r\n                        </div>\r\n                        <div>\r\n                            <h5 className='mb-0'>{props.currentUser.fullName}</h5>\r\n                            <p className='mb-0'>{props.currentUser.role?.name}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ul className='nav flex-column mt-4'>\r\n                        <li className='nav-item'><Link className='nav-link text-white'\r\n                                                       to=\"/admin/dashboard\">Dashboard</Link>\r\n                        </li>\r\n                        <li className='nav-item'><Link className='nav-link text-white'\r\n                                                       to=\"/admin/order\">Buyurtmalar</Link></li>\r\n                        <li className='nav-item'><Link className='nav-link text-white'\r\n                                                       to=\"/admin/category\">Kategoriyalar</Link></li>\r\n                        <li className='nav-item'><Link className='nav-link text-white'\r\n                                                       to=\"/admin/product\">Mahsulotlar</Link></li>\r\n                        {/*<li className='nav-item mt-4'><span className='nav-link text-white'*/}\r\n                        {/*                                    onClick={changeModal}>Chiqish</span></li>*/}\r\n                    </ul>\r\n\r\n                    {/*<Modal isOpen={props.modalOpen} toggle={changeModal}>*/}\r\n                    {/*    <ModalBody>*/}\r\n                    {/*        <h5>Rostdan ham chiqmoqchimisiz? Buncha tez bizni tark etyapsiz?</h5>*/}\r\n                    {/*    </ModalBody>*/}\r\n                    {/*    <ModalFooter>*/}\r\n                    {/*        <Link type='button' className='btn btn-danger'*/}\r\n                    {/*              onClick={() => localStorage.removeItem(TOKEN_NAME)} to='/'>Ha</Link>*/}\r\n                    {/*        <button type='button' className='btn btn-success' onClick={changeModal}>Yo'q</button>*/}\r\n                    {/*    </ModalFooter>*/}\r\n                    {/*</Modal>*/}\r\n\r\n                </div>\r\n                {/*<div className=\"admin-content-right\">*/}\r\n                {/*    {props.children}*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.app.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getMe})(AdminNavbar);","import React from 'react';\r\n\r\nconst AdminDashboard = () => {\r\n    return (\r\n        <div>\r\n            <h1>Dashboard</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;","import React, {useEffect} from 'react';\r\nimport {\r\n    addCategory,\r\n    deleteCategory,\r\n    editCategory,\r\n    getCategories,\r\n    search,\r\n    updateState\r\n} from \"../redux/action/categoryAction\";\r\nimport {Modal, ModalBody, ModalFooter} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {AvForm, AvField} from 'availity-reactstrap-validation';\r\nimport {getMe} from \"../redux/action/appAction\";\r\n\r\nconst AdminCategory = (props) => {\r\n    useEffect(() => {\r\n        props.getCategories()\r\n        props.getMe()\r\n    }, [])\r\n\r\n    const saveCategory = (event, values) => {\r\n        console.log(props.currentCategory)\r\n        if (props.currentCategory) {\r\n            props.editCategory(props.currentCategory.id, values)\r\n        } else {\r\n            props.addCategory(values)\r\n        }\r\n    }\r\n\r\n    const changeDeleteModal = () => {\r\n        props.updateState({\r\n            deleteModalOpen: false\r\n        })\r\n    }\r\n    const searchCategory = (e) => {\r\n        console.log(e.target.value)\r\n        props.search(e.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h5>Category Page </h5>\r\n                    <div className=\"col-3 offset-3\">\r\n                        <input type=\"text\" onChange={(e) => searchCategory(e)}/>\r\n                    </div>\r\n                    <div className=\"col-3 offset-10\">\r\n                        <button type=\"button\" className=\"btn btn-success\" onClick={() => {\r\n                            props.updateState({modalOpen: true})\r\n                        }}>Add\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <table className='table table-striped table-hover mt-3 table-bordered'>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Title (uz)</th>\r\n                            {/*<th>Title (ru)</th>*/}\r\n                            {/*<th>Title (en)</th>*/}\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {props.categories?.map((item, id) => (\r\n                            <tr key={id}>\r\n                                <td>{item.name}</td>\r\n                                {/*<td>{item.nameRu}</td>*/}\r\n                                {/*<td>{item.nameEn}</td>*/}\r\n                                <td>\r\n                                    <button className=\"btn btn-warning\"\r\n                                            onClick={() => props.updateState({\r\n                                                currentCategory: item,\r\n                                                modalOpen: true\r\n                                            })}>EDIT\r\n                                    </button>\r\n                                    <button className=\"btn btn-danger\"\r\n                                            onClick={() => props.updateState({\r\n                                                currentCategory: item,\r\n                                                deleteModalOpen: true\r\n                                            })}>DELETE\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal isOpen={props.modalOpen}>\r\n                <AvForm onValidSubmit={saveCategory}>\r\n                    <ModalBody>\r\n                        <AvField name=\"name\" type=\"text\" value={props.currentCategory ? props.currentCategory.name : \"\"}\r\n                                 placeholder=\"Uzbekcha nomini kirit\"/>\r\n                        {/*<AvField name=\"nameRu\" defaultValue={props.selectedCategory.nameRu} type=\"text\"*/}\r\n                        {/*         placeholder=\"Ruscha nomini kirit\"/>*/}\r\n                        {/*<AvField name=\"nameEn\" defaultValue={props.selectedCategory.nameEn} type=\"text\"*/}\r\n                        {/*         placeholder=\"Inglizcha nomini kirit\"/>*/}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                        <button className=\"btn btn-danger\" type=\"button\" onClick={() =>\r\n                            props.updateState({modalOpen: false, selectedCategory: {}})}>Cancel\r\n                        </button>\r\n                    </ModalFooter>\r\n                </AvForm>\r\n            </Modal>\r\n\r\n            <Modal isOpen={props.deleteModalOpen} toggle={changeDeleteModal}>\r\n                <ModalBody>\r\n                    <h5>Rostdan ham o'chirmoqchimisiz?</h5>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button type='button' className='btn btn-danger' onClick={() => {\r\n                        props.deleteCategory(props.currentCategory.id)\r\n                    }}>Ha\r\n                    </button>\r\n                    <button type='button' className='btn btn-secondary' onClick={changeDeleteModal}>Yo'q\r\n                    </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        modalOpen: state.category.modalOpen,\r\n        categories: state.category.categories,\r\n        currentUser: state.app.currentUser,\r\n        deleteModalOpen: state.category.deleteModalOpen,\r\n        currentCategory: state.category.currentCategory\r\n        // selectedCategory: state.category.selectedCategory,\r\n        // selectedIdForDelete: state.category.selectedIdForDelete\r\n        //statelar qo'shiladi\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateState,\r\n    addCategory,\r\n    getCategories,\r\n    deleteCategory,\r\n    editCategory,\r\n    search,\r\n    getMe\r\n})(AdminCategory);","import React from 'react';\r\nimport AdminNavbar from \"../components/AdminNavbar\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport AdminDashboard from \"../components/AdminDashboard\";\r\nimport AdminCategory from \"../components/AdminCategory\";\r\n\r\nconst Admin = (props) => {\r\n    let location = useLocation();\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <h1>Admin</h1>\r\n                        <AdminNavbar>\r\n                        </AdminNavbar>\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                        {console.log(location)}\r\n                        {location.pathname === \"/admin/dashboard\" ? <AdminDashboard/> : \"\"}\r\n                        {location.pathname === \"/admin/category\" ? <AdminCategory/> : \"\"}\r\n                        {/*{props.history.location.pathname == \"/admin/order\" ? <Order/> : \"\"}*/}\r\n                        {/*{props.history.location.pathname == \"/admin/marketing\" ? <AdminMarketing/> : \"\"}*/}\r\n                        {/*{props.history.location.pathname == \"/admin/product\" ? <Prodacts/> : \"\"}*/}\r\n                        {/*{props.history.location.pathname == \"/admin/productType\" ? <ProductType/> : \"\"}*/}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;","import React from 'react';\r\nimport {TOKEN_NAME} from \"../service/api\";\r\nimport {Navigate, Outlet, Route} from \"react-router-dom\";\r\nimport NotFound from \"./NotFound\";\r\n\r\n// const PrivateRoute = (props) => {\r\n//     console.log(props)\r\n//     // return (\r\n//     //     // localStorage.getItem(TOKEN_NAME) ?\r\n//     //     //     <Route path={props.path} element={<props.component/>}/>\r\n//     //     //     : <Route element={<NotFound/>}/>\r\n//     //     // : <Redirect to=\"/login\"/>\r\n//     // );\r\n//\r\n// };\r\n\r\nconst PrivateRoute = () => {\r\n    // const auth = null; // determine if authorized, from context or however you're doing it\r\n\r\n    // If authorized, return an outlet that will render child elements\r\n    // If not, return element that will navigate to login page\r\n    return localStorage.getItem(TOKEN_NAME) ? <Outlet/> : <Navigate to=\"/login\"/>;\r\n}\r\nexport default PrivateRoute;","import React from 'react';\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport {ToastContainer} from \"react-toastify\";\nimport Admin from \"./pages/Admin\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nconst App = () => {\n    return (\n        <div>\n            <Router>\n                <Routes>\n                    <Route exact path='/' element={<PrivateRoute/>}>\n                        <Route exact path='/' element={<Admin/>}/>\n                        <Route exact path='/admin/:id' element={<Admin/>}/>\n                    </Route>\n                    <Route path={\"/login\"} element={<Login/>}/>\n                    {/*<PrivateRoute path={\"/admin/:url\"} element={<Admin/>}/>*/}\n                    {/*<Route path={\"/admin/category\"} element={<Admin/>}/>*/}\n                </Routes>\n            </Router>\n            <ToastContainer/>\n        </div>\n    );\n};\n\nexport default App;","import {LOGIN} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    modalOpen: true,\r\n    menu: {id: 1, name: \"Jafar\"}\r\n};\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                isLoading: !state.isLoading\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import {LOGIN, UPDATESTATE} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n    deleteModalOpen: false,\r\n    currentCategory: {},\r\n    categories: []\r\n};\r\n\r\nexport const categoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATESTATE:\r\n            return {...state, ...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};","import {UPDATESTATE} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    currentUser: {}\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATESTATE:\r\n            return {...state, ...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers} from \"redux\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {categoryReducer} from \"./categoryReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    category: categoryReducer,\r\n    app: appReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport {rootReducer} from \"./redux/reducer/rootreducer\";\nimport redux_thunk from \"redux-thunk\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {ToastContainer} from \"react-toastify\";\n\nconst store = createStore(rootReducer, compose(applyMiddleware(redux_thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}